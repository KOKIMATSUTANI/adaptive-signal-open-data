# docker/Dockerfile.base
# Common base (Python, pip/poetry, pandas/pyarrow and other dependencies shared across all jobs)
# Install heavy dependencies once and cache them â†’ subsequent derived images build efficiently
FROM python:3.12-slim

# Arguments for user/group ID matching host system (WSL environment)
ARG APP_UID=1000
ARG APP_GID=1000
RUN groupadd -g ${APP_GID} appuser && useradd -m -u ${APP_UID} -g ${APP_GID} appuser
USER appuser

# Python environment settings
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PATH="/usr/local/bin:${PATH}" \
    TZ=Asia/Tokyo

WORKDIR /app

# OS dependencies (minimal - common for all jobs)
RUN apt-get update && apt-get install -y --no-install-recommends \
      ca-certificates \
      curl \
      git \
      wget \
      unzip \
      fuse \
      libfuse2 \
      tzdata \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install common Python dependencies (common for all jobs)
# Install heavy dependencies once here and cache them
COPY requirements/base.txt /tmp/requirements-base.txt
RUN python -m pip install --upgrade pip setuptools wheel \
    && pip install -r /tmp/requirements-base.txt \
    && rm /tmp/requirements-base.txt

# Create working directory structure
RUN mkdir -p /app/src /app/configs /app/data /app/results /app/logs

# Create non-root user with host-matching UID/GID (WSL environment)
# NOTE: Do not use chmod 777 or 666.
# Use proper ownership (chown) and safe permissions instead (chmod 755).
RUN groupadd -g ${APP_GID} appuser && useradd -u ${APP_UID} -g ${APP_GID} -m appuser \
    && chown -R appuser:appuser /app

# Health check port (common)
EXPOSE 8000
